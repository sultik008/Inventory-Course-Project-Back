generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("postgresql://inventory_ksyc_user:15IntJcANdtGro4cS6Y1H5oDqU9ImVUZ@dpg-d2so2iggjchc73ajg6og-a.frankfurt-postgres.render.com/inventory_ksyc")
}

model inventory {
  inventoryid String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  owner       String?     @db.Uuid
  createdat   DateTime?   @default(now()) @db.Timestamptz(6)
  public      Boolean?    @default(false)
  description String?     @db.VarChar(65535)
  field1      String      @db.VarChar(255)
  field2      String      @db.VarChar(255)
  field3      String      @db.VarChar(255)
  image       String?     @db.VarChar(10240)
  category    String      @db.VarChar(255)
  name        String?     @db.VarChar(255)
  ownername   String?     @db.VarChar(255)
  customid    String?     @db.VarChar(255)
  users       users?      @relation(fields: [owner], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usersinvs   usersinvs[]
}

model items {
  inventoryid String    @db.Uuid
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdby   String    @db.Uuid
  createdat   DateTime? @default(now()) @db.Timestamptz(6)
  lasteditat  DateTime? @default(now()) @db.Timestamptz(6)
  image       String?   @db.VarChar(10240)
  fieldvalue1 String    @db.VarChar(255)
  fieldvalue2 String    @db.VarChar(255)
  fieldvalue3 String    @db.VarChar(255)
  customid    String?   @db.VarChar(255)
  ownername   String    @db.VarChar(255)
  users       users     @relation(fields: [createdby], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([inventoryid, customid])
}

model users {
  id        String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email     String      @unique @db.VarChar(255)
  name      String      @db.VarChar(255)
  logedin   DateTime?   @default(now()) @db.Timestamptz(6)
  isadmin   Boolean     @default(false)
  picture   String      @default(dbgenerated("false")) @db.VarChar(10000)
  password  String?     @db.VarChar(255)
  inventory inventory[]
  items     items[]
  usersinvs usersinvs[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model usersinvs {
  userid      String    @db.Uuid
  inventoryid String    @db.Uuid
  role        String?
  inventory   inventory @relation(fields: [inventoryid], references: [inventoryid], onDelete: Cascade, onUpdate: NoAction)
  users       users     @relation(fields: [userid], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([userid, inventoryid])
}

model category {
  name String @unique @db.VarChar(255)
}
